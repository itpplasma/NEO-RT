!    -*- f90 -*-
python module orbit__user__routines
    interface orbit_user_interface
        subroutine integrand(t, y, res)
            real(8) intent(in)  :: t
            real(8) dimension(5),intent(in)  :: y
            real(8) dimension(2),intent(out) :: res
        end subroutine integrand
    end interface orbit_user_interface
end python module orbit__user__routines
python module orbit ! in
    interface  ! in :orbit
        module orbit ! in :orbit:orbit_full.f90
            use common
            subroutine timestep(tau,z,vz) ! in :orbit:orbit_full.f90:orbit
                real(kind=8) intent(in) :: tau
                real(kind=8) dimension(5),intent(in) :: z
                real(kind=8) dimension(5),intent(in) :: vz
            end subroutine timestep
            subroutine bounce_average(n,z,integrand,taub,delphi,ret) ! in :orbit:orbit_full.f90:orbit
                use orbit__user__routines
                integer(kind=4) intent(in) :: n
                real(kind=8) dimension(5),intent(in) :: z
                real(kind=8) intent(out) :: taub
                real(kind=8) intent(out) :: delphi
                real(kind=8) dimension(n),intent(out),depend(n) :: ret
                external integrand
            end subroutine bounce_average
            subroutine bounce_integral_box(n,z,integrand,sbox,tau,ret) ! in :orbit:orbit_full.f90:orbit
                use orbit__user__routines
                integer(kind=4) intent(in) :: n
                real(kind=8) dimension(5),intent(in) :: z
                real(kind=8) dimension(*),intent(in) :: sbox
                real(kind=8) dimension(size(sbox)),intent(out),depend(sbox) :: tau
                real(kind=8) dimension(n,size(sbox)),intent(out),depend(n,sbox) :: ret
                external integrand
            end subroutine bounce_integral_box
            subroutine bounce_harmonic(next,z,fn,mb,nph,taub,delphi,ret) ! in :orbit:orbit_full.f90:orbit
                use orbit__user__routines, fn=>integrand
                integer(kind=4) intent(in) :: next
                real(kind=8) dimension(5),intent(inout) :: z
                integer(kind=4) intent(in) :: mb
                integer(kind=4) intent(in) :: nph
                real(kind=8) intent(out) :: taub
                real(kind=8) intent(out) :: delphi
                real(kind=8) dimension(next),intent(out),depend(next) :: ret
                intent(callback, hide) fn
                external fn
            end subroutine bounce_harmonic
        end module orbit
    end interface
end python module orbit
